!function(){"use strict";var n={4272:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 100%;\r\n}\r\n\r\n@media screen and (min-width: 700px) {\r\n    .container {\r\n       width: 90%;\r\n        max-width: 880px;\r\n\r\n        \r\n    }\r\n}","",{version:3,sources:["webpack://./src/blocks/container/container.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,SAAS;IACT,UAAU;IACV,WAAW;AACf;;AAEA;IACI;OACG,UAAU;QACT,gBAAgB;;;IAGpB;AACJ",sourcesContent:[".container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 100%;\r\n}\r\n\r\n@media screen and (min-width: 700px) {\r\n    .container {\r\n       width: 90%;\r\n        max-width: 880px;\r\n\r\n        \r\n    }\r\n}"],sourceRoot:""}]),r.Z=A},6324:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".element__delete-icon {\r\n    position: absolute;\r\n    top: 18px;\r\n    right: 15px;\r\n    width: 18px;\r\n}\r\n\r\n.element__delete-icon:hover {\r\n    opacity: 0.6;\r\n    cursor: pointer;\r\n}","",{version:3,sources:["webpack://./src/blocks/element/__delete-icon/element__delete-icon.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,SAAS;IACT,WAAW;IACX,WAAW;AACf;;AAEA;IACI,YAAY;IACZ,eAAe;AACnB",sourcesContent:[".element__delete-icon {\r\n    position: absolute;\r\n    top: 18px;\r\n    right: 15px;\r\n    width: 18px;\r\n}\r\n\r\n.element__delete-icon:hover {\r\n    opacity: 0.6;\r\n    cursor: pointer;\r\n}"],sourceRoot:""}]),r.Z=A},7742:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i),s=e(1667),a=e.n(s),p=new URL(e(1470),e.b),c=A()(o()),d=a()(p);c.push([n.id,".element__heart_like {\r\n    background-image: url("+d+");\r\n}","",{version:3,sources:["webpack://./src/blocks/element/__heart/_like/element__heart_like.css"],names:[],mappings:"AAAA;IACI,yDAA0D;AAC9D",sourcesContent:[".element__heart_like {\r\n    background-image: url(../../../../images/heart_filled.svg);\r\n}"],sourceRoot:""}]),r.Z=c},5024:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i),s=e(1667),a=e.n(s),p=new URL(e(1728),e.b),c=new URL(e(1470),e.b),d=A()(o()),l=a()(p),u=a()(c);d.push([n.id,".element__heart {\r\n    background-color: white;\r\n    background-image: url("+l+");\r\n    min-width: 21px;\r\n    height: 21px;\r\n    margin: 0;\r\n    border: 0;\r\n    padding: 0;\r\n    opacity: 1;\r\n    background-size: contain;\r\n    background-repeat: no-repeat;\r\n}\r\n.element__heart:hover {\r\n    opacity: 0.5;\r\n    cursor: pointer;\r\n}\r\n.element__heart:active {\r\n    background-image: url("+u+");\r\n    opacity: 1;\r\n}","",{version:3,sources:["webpack://./src/blocks/element/__heart/element__heart.css"],names:[],mappings:"AAAA;IACI,uBAAuB;IACvB,yDAA0D;IAC1D,eAAe;IACf,YAAY;IACZ,SAAS;IACT,SAAS;IACT,UAAU;IACV,UAAU;IACV,wBAAwB;IACxB,4BAA4B;AAChC;AACA;IACI,YAAY;IACZ,eAAe;AACnB;AACA;IACI,yDAAyD;IACzD,UAAU;AACd",sourcesContent:['.element__heart {\r\n    background-color: white;\r\n    background-image: url("../../../images/heart_outline.svg");\r\n    min-width: 21px;\r\n    height: 21px;\r\n    margin: 0;\r\n    border: 0;\r\n    padding: 0;\r\n    opacity: 1;\r\n    background-size: contain;\r\n    background-repeat: no-repeat;\r\n}\r\n.element__heart:hover {\r\n    opacity: 0.5;\r\n    cursor: pointer;\r\n}\r\n.element__heart:active {\r\n    background-image: url("../../../images/heart_filled.svg");\r\n    opacity: 1;\r\n}'],sourceRoot:""}]),r.Z=d},9508:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".element__photo {\r\n    width: 282px;\r\n    height: 282px;\r\n    border-radius: 10px 10px 0px 0px;\r\n    object-fit: cover;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n@media screen and (min-width:700px) {\r\n    .element__photo {\r\n        max-height: 282px;\r\n        \r\n    }\r\n}\r\n\r\n.element__photo:hover {\r\n    cursor: pointer;\r\n}","",{version:3,sources:["webpack://./src/blocks/element/__photo/element__photo.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,aAAa;IACb,gCAAgC;IAChC,iBAAiB;IACjB,SAAS;IACT,UAAU;AACd;;AAEA;IACI;QACI,iBAAiB;;IAErB;AACJ;;AAEA;IACI,eAAe;AACnB",sourcesContent:[".element__photo {\r\n    width: 282px;\r\n    height: 282px;\r\n    border-radius: 10px 10px 0px 0px;\r\n    object-fit: cover;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n@media screen and (min-width:700px) {\r\n    .element__photo {\r\n        max-height: 282px;\r\n        \r\n    }\r\n}\r\n\r\n.element__photo:hover {\r\n    cursor: pointer;\r\n}"],sourceRoot:""}]),r.Z=A},3180:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".element__text {\r\n    font-weight: 900;\r\n    color: #000;\r\n    font-size: 24px;\r\n    margin: 0;\r\n    padding: 0;\r\n    overflow: hidden;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 1;\r\n    -webkit-box-orient: vertical;\r\n}","",{version:3,sources:["webpack://./src/blocks/element/__text/element__text.css"],names:[],mappings:"AAAA;IACI,gBAAgB;IAChB,WAAW;IACX,eAAe;IACf,SAAS;IACT,UAAU;IACV,gBAAgB;IAChB,oBAAoB;IACpB,qBAAqB;IACrB,4BAA4B;AAChC",sourcesContent:[".element__text {\r\n    font-weight: 900;\r\n    color: #000;\r\n    font-size: 24px;\r\n    margin: 0;\r\n    padding: 0;\r\n    overflow: hidden;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 1;\r\n    -webkit-box-orient: vertical;\r\n}"],sourceRoot:""}]),r.Z=A},7950:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".element__title {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin: 25px 15px 31px 21px;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}","",{version:3,sources:["webpack://./src/blocks/element/__title/element__title.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,2BAA2B;IAC3B,UAAU;IACV,sBAAsB;AAC1B",sourcesContent:[".element__title {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin: 25px 15px 31px 21px;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n}"],sourceRoot:""}]),r.Z=A},549:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".element {\r\n    background-color: white;\r\n    border-radius: 10px;\r\n    \r\n    display: block;\r\n    gap: 0;\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 100%;\r\n    max-height: 369px;\r\n    align-items: flex-start;\r\n    position: relative;\r\n    \r\n    \r\n\r\n}","",{version:3,sources:["webpack://./src/blocks/element/element.css"],names:[],mappings:"AAAA;IACI,uBAAuB;IACvB,mBAAmB;;IAEnB,cAAc;IACd,MAAM;IACN,SAAS;IACT,UAAU;IACV,WAAW;IACX,iBAAiB;IACjB,uBAAuB;IACvB,kBAAkB;;;;AAItB",sourcesContent:[".element {\r\n    background-color: white;\r\n    border-radius: 10px;\r\n    \r\n    display: block;\r\n    gap: 0;\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 100%;\r\n    max-height: 369px;\r\n    align-items: flex-start;\r\n    position: relative;\r\n    \r\n    \r\n\r\n}"],sourceRoot:""}]),r.Z=A},182:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".elements {\r\n    display: grid;\r\n    grid-template-columns: 282px;\r\n    gap: 20px;\r\n    max-width: 100%;\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n\r\n@media screen and (min-width:700px) {\r\n    .elements {\r\n        grid-template-columns: repeat(2, 282px);\r\n        gap: 21px 17px;\r\n    }\r\n}\r\n\r\n@media screen and (min-width:980px) {\r\n    .elements {\r\n        grid-template-columns: repeat(3, 282px);\r\n        \r\n    }\r\n}","",{version:3,sources:["webpack://./src/blocks/elements/elements.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,4BAA4B;IAC5B,SAAS;IACT,eAAe;IACf,UAAU;IACV,SAAS;AACb;;AAEA;IACI;QACI,uCAAuC;QACvC,cAAc;IAClB;AACJ;;AAEA;IACI;QACI,uCAAuC;;IAE3C;AACJ",sourcesContent:[".elements {\r\n    display: grid;\r\n    grid-template-columns: 282px;\r\n    gap: 20px;\r\n    max-width: 100%;\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\n\r\n@media screen and (min-width:700px) {\r\n    .elements {\r\n        grid-template-columns: repeat(2, 282px);\r\n        gap: 21px 17px;\r\n    }\r\n}\r\n\r\n@media screen and (min-width:980px) {\r\n    .elements {\r\n        grid-template-columns: repeat(3, 282px);\r\n        \r\n    }\r\n}"],sourceRoot:""}]),r.Z=A},278:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".footer__text {\r\n    font-size: 14px;\r\n    color: #545454;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n\r\n@media screen and (min-width:700px) {\r\n    .footer__text{\r\n        font-size: 18px;\r\n    }\r\n}","",{version:3,sources:["webpack://./src/blocks/footer/__text/footer__text.css"],names:[],mappings:"AAAA;IACI,eAAe;IACf,cAAc;IACd,SAAS;IACT,UAAU;AACd;;;AAGA;IACI;QACI,eAAe;IACnB;AACJ",sourcesContent:[".footer__text {\r\n    font-size: 14px;\r\n    color: #545454;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n\r\n@media screen and (min-width:700px) {\r\n    .footer__text{\r\n        font-size: 18px;\r\n    }\r\n}"],sourceRoot:""}]),r.Z=A},6060:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".footer {\r\n    width: 88%;\r\n    margin: 50px auto 36px;\r\n}\r\n\r\n@media screen and (min-width: 700px) {\r\n    .footer {\r\n        width: 100%;\r\n    }\r\n}","",{version:3,sources:["webpack://./src/blocks/footer/footer.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,sBAAsB;AAC1B;;AAEA;IACI;QACI,WAAW;IACf;AACJ",sourcesContent:[".footer {\r\n    width: 88%;\r\n    margin: 50px auto 36px;\r\n}\r\n\r\n@media screen and (min-width: 700px) {\r\n    .footer {\r\n        width: 100%;\r\n    }\r\n}"],sourceRoot:""}]),r.Z=A},6068:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".form__input-error_active {\r\n    color: #ff0000;\r\n    font-size: 12px;\r\n    margin: 0;\r\n    padding: 5px 0 0 0;\r\n}","",{version:3,sources:["webpack://./src/blocks/form/__input-error/_active/form__input-error_active.css"],names:[],mappings:"AAAA;IACI,cAAc;IACd,eAAe;IACf,SAAS;IACT,kBAAkB;AACtB",sourcesContent:[".form__input-error_active {\r\n    color: #ff0000;\r\n    font-size: 12px;\r\n    margin: 0;\r\n    padding: 5px 0 0 0;\r\n}"],sourceRoot:""}]),r.Z=A},9228:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".form__input_type_error {\r\n    border-bottom-color: red;\r\n    margin: 0;\r\n}","",{version:3,sources:["webpack://./src/blocks/form/__input/_type/form__input_type_error.css"],names:[],mappings:"AAAA;IACI,wBAAwB;IACxB,SAAS;AACb",sourcesContent:[".form__input_type_error {\r\n    border-bottom-color: red;\r\n    margin: 0;\r\n}"],sourceRoot:""}]),r.Z=A},1342:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".form__input {\r\n    border: 0;\r\n    border-bottom: 1px solid rgba(0, 0, 0, .2);\r\n    line-height: 17px;\r\n    font-size: 14px;\r\n    padding: 30px 0 13px;\r\n    background-color: transparent;\r\n    margin: 0;\r\n}\r\n\r\n","",{version:3,sources:["webpack://./src/blocks/form/__input/form__input.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,0CAA0C;IAC1C,iBAAiB;IACjB,eAAe;IACf,oBAAoB;IACpB,6BAA6B;IAC7B,SAAS;AACb",sourcesContent:[".form__input {\r\n    border: 0;\r\n    border-bottom: 1px solid rgba(0, 0, 0, .2);\r\n    line-height: 17px;\r\n    font-size: 14px;\r\n    padding: 30px 0 13px;\r\n    background-color: transparent;\r\n    margin: 0;\r\n}\r\n\r\n"],sourceRoot:""}]),r.Z=A},187:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".form__submit_inactive {\r\n    background-color: #fff;\r\n    opacity: 0.2;\r\n    border: 1px solid #000000;\r\n    border-radius: 2px;\r\n    color: #000;\r\n}\r\n\r\n.form__submit_inactive:hover {\r\n    opacity: 0.2;\r\n    cursor: default;\r\n}","",{version:3,sources:["webpack://./src/blocks/form/__submit/_inactive/form__submit_inactive.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,YAAY;IACZ,yBAAyB;IACzB,kBAAkB;IAClB,WAAW;AACf;;AAEA;IACI,YAAY;IACZ,eAAe;AACnB",sourcesContent:[".form__submit_inactive {\r\n    background-color: #fff;\r\n    opacity: 0.2;\r\n    border: 1px solid #000000;\r\n    border-radius: 2px;\r\n    color: #000;\r\n}\r\n\r\n.form__submit_inactive:hover {\r\n    opacity: 0.2;\r\n    cursor: default;\r\n}"],sourceRoot:""}]),r.Z=A},8445:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".form__submit {\r\n    background: #000000;\r\n    border: 0;\r\n    border-radius: 2px;\r\n    color: white;\r\n    font-size: 14px;\r\n    padding: 18px;\r\n    box-sizing: border-box;\r\n    margin-top: 16px;\r\n}\r\n\r\n.form__submit:hover {\r\n    opacity: 0.8;\r\n    cursor: pointer;\r\n}\r\n\r\n@media screen and (min-width:700px) {\r\n    .form__submit {\r\n        font-size: 18px;\r\n        padding: 13.66px 0 18.5px;\r\n        margin-top: 18px;\r\n    }\r\n}","",{version:3,sources:["webpack://./src/blocks/form/__submit/form__submit.css"],names:[],mappings:"AAAA;IACI,mBAAmB;IACnB,SAAS;IACT,kBAAkB;IAClB,YAAY;IACZ,eAAe;IACf,aAAa;IACb,sBAAsB;IACtB,gBAAgB;AACpB;;AAEA;IACI,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI;QACI,eAAe;QACf,yBAAyB;QACzB,gBAAgB;IACpB;AACJ",sourcesContent:[".form__submit {\r\n    background: #000000;\r\n    border: 0;\r\n    border-radius: 2px;\r\n    color: white;\r\n    font-size: 14px;\r\n    padding: 18px;\r\n    box-sizing: border-box;\r\n    margin-top: 16px;\r\n}\r\n\r\n.form__submit:hover {\r\n    opacity: 0.8;\r\n    cursor: pointer;\r\n}\r\n\r\n@media screen and (min-width:700px) {\r\n    .form__submit {\r\n        font-size: 18px;\r\n        padding: 13.66px 0 18.5px;\r\n        margin-top: 18px;\r\n    }\r\n}"],sourceRoot:""}]),r.Z=A},808:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 46px;\r\n\r\n}\r\n\r\n@media screen and (min-width:700px){\r\n    .form {\r\n        margin-top: 24px;\r\n    }\r\n}","",{version:3,sources:["webpack://./src/blocks/form/form.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,sBAAsB;IACtB,gBAAgB;;AAEpB;;AAEA;IACI;QACI,gBAAgB;IACpB;AACJ",sourcesContent:[".form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 46px;\r\n\r\n}\r\n\r\n@media screen and (min-width:700px){\r\n    .form {\r\n        margin-top: 24px;\r\n    }\r\n}"],sourceRoot:""}]),r.Z=A},2820:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".header__line {\r\n    width: 100%;\r\n    border-bottom: 1px solid #545454;\r\n    opacity: 0.7;\r\n    margin: 0;\r\n    padding: 0;\r\n}","",{version:3,sources:["webpack://./src/blocks/header/__line/header__line.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,gCAAgC;IAChC,YAAY;IACZ,SAAS;IACT,UAAU;AACd",sourcesContent:[".header__line {\r\n    width: 100%;\r\n    border-bottom: 1px solid #545454;\r\n    opacity: 0.7;\r\n    margin: 0;\r\n    padding: 0;\r\n}"],sourceRoot:""}]),r.Z=A},30:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".header__logo {\r\n    margin: 28px auto 32px 27px;\r\n    width: 126px;\r\n    height: 24px;\r\n    opacity: 1;\r\n}\r\n\r\n@media screen and (min-width: 680px) {\r\n    .header__logo {\r\n        margin: 34px auto 41px 0px;\r\n        width: 173px;\r\n        height: 33px;\r\n    }\r\n}","",{version:3,sources:["webpack://./src/blocks/header/__logo/header__logo.css"],names:[],mappings:"AAAA;IACI,2BAA2B;IAC3B,YAAY;IACZ,YAAY;IACZ,UAAU;AACd;;AAEA;IACI;QACI,0BAA0B;QAC1B,YAAY;QACZ,YAAY;IAChB;AACJ",sourcesContent:[".header__logo {\r\n    margin: 28px auto 32px 27px;\r\n    width: 126px;\r\n    height: 24px;\r\n    opacity: 1;\r\n}\r\n\r\n@media screen and (min-width: 680px) {\r\n    .header__logo {\r\n        margin: 34px auto 41px 0px;\r\n        width: 173px;\r\n        height: 33px;\r\n    }\r\n}"],sourceRoot:""}]),r.Z=A},2843:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".header {\r\n    display: flex;\r\n    \r\n    align-items: flex-start;\r\n    justify-content: flex-start;\r\n    border-bottom: 1px solid rgba(84, 84, 84, 0.7);\r\n    width: 100%;\r\n}","",{version:3,sources:["webpack://./src/blocks/header/header.css"],names:[],mappings:"AAAA;IACI,aAAa;;IAEb,uBAAuB;IACvB,2BAA2B;IAC3B,8CAA8C;IAC9C,WAAW;AACf",sourcesContent:[".header {\r\n    display: flex;\r\n    \r\n    align-items: flex-start;\r\n    justify-content: flex-start;\r\n    border-bottom: 1px solid rgba(84, 84, 84, 0.7);\r\n    width: 100%;\r\n}"],sourceRoot:""}]),r.Z=A},2496:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".main {\r\n    display: flex;\r\n    width: 100%;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n}\r\n\r\n@media screen and (min-width:980px) {\r\n    .main {\r\n        display: block;\r\n    }\r\n}","",{version:3,sources:["webpack://./src/blocks/main/main.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,WAAW;IACX,sBAAsB;IACtB,2BAA2B;IAC3B,mBAAmB;AACvB;;AAEA;IACI;QACI,cAAc;IAClB;AACJ",sourcesContent:[".main {\r\n    display: flex;\r\n    width: 100%;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n}\r\n\r\n@media screen and (min-width:980px) {\r\n    .main {\r\n        display: block;\r\n    }\r\n}"],sourceRoot:""}]),r.Z=A},2525:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,'.page {\r\n    background-color: #000;\r\n    font-family: "Inter", sans-serif;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    color: white;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    width: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n    line-height: 1.2;\r\n}',"",{version:3,sources:["webpack://./src/blocks/page/page.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,gCAAgC;IAChC,kBAAkB;IAClB,gBAAgB;IAChB,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,WAAW;IACX,SAAS;IACT,UAAU;IACV,gBAAgB;AACpB",sourcesContent:['.page {\r\n    background-color: #000;\r\n    font-family: "Inter", sans-serif;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    color: white;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    width: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n    line-height: 1.2;\r\n}'],sourceRoot:""}]),r.Z=A},1175:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".popup__box {\r\n    width: 100%;\r\n    background-color: white;\r\n    box-shadow: 0px 0px 25px rgba(0, 0, 0, 0.15);\r\n    border-radius: 10px;\r\n    padding: 22px 25px;\r\n    box-sizing: border-box;\r\n}\r\n\r\n@media screen and (min-width: 700px) {\r\n    .popup__box {\r\n        padding: 34px 36px 36.5px;\r\n        width: 430px;\r\n    }\r\n}","",{version:3,sources:["webpack://./src/blocks/popup/__box/popup__box.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,uBAAuB;IACvB,4CAA4C;IAC5C,mBAAmB;IACnB,kBAAkB;IAClB,sBAAsB;AAC1B;;AAEA;IACI;QACI,yBAAyB;QACzB,YAAY;IAChB;AACJ",sourcesContent:[".popup__box {\r\n    width: 100%;\r\n    background-color: white;\r\n    box-shadow: 0px 0px 25px rgba(0, 0, 0, 0.15);\r\n    border-radius: 10px;\r\n    padding: 22px 25px;\r\n    box-sizing: border-box;\r\n}\r\n\r\n@media screen and (min-width: 700px) {\r\n    .popup__box {\r\n        padding: 34px 36px 36.5px;\r\n        width: 430px;\r\n    }\r\n}"],sourceRoot:""}]),r.Z=A},9393:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".popup__caption {\r\n    font-size: 12px;\r\n    line-height: 1.25;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    width: 100%;\r\n    margin: 10px auto 0 0;\r\n}","",{version:3,sources:["webpack://./src/blocks/popup/__caption/popup__caption.css"],names:[],mappings:"AAAA;IACI,eAAe;IACf,iBAAiB;IACjB,aAAa;IACb,2BAA2B;IAC3B,WAAW;IACX,qBAAqB;AACzB",sourcesContent:[".popup__caption {\r\n    font-size: 12px;\r\n    line-height: 1.25;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    width: 100%;\r\n    margin: 10px auto 0 0;\r\n}"],sourceRoot:""}]),r.Z=A},4380:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".popup__close-button_photo {\r\n    width: 30px;\r\n    height: 30px;\r\n    margin: 0 -30px 0 0;\r\n}\r\n\r\n@media screen and (min-width: 700px) {\r\n    .popup__close-button_photo {\r\n        min-width: 40px;\r\n        min-height: 40px;\r\n        margin-right: -40px;\r\n    }\r\n}","",{version:3,sources:["webpack://./src/blocks/popup/__close-button/_photo/popup__close-button_photo.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI;QACI,eAAe;QACf,gBAAgB;QAChB,mBAAmB;IACvB;AACJ",sourcesContent:[".popup__close-button_photo {\r\n    width: 30px;\r\n    height: 30px;\r\n    margin: 0 -30px 0 0;\r\n}\r\n\r\n@media screen and (min-width: 700px) {\r\n    .popup__close-button_photo {\r\n        min-width: 40px;\r\n        min-height: 40px;\r\n        margin-right: -40px;\r\n    }\r\n}"],sourceRoot:""}]),r.Z=A},6925:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i),s=e(1667),a=e.n(s),p=new URL(e(8067),e.b),c=A()(o()),d=a()(p);c.push([n.id,".popup__close-button {\r\n    min-width: 26px;\r\n    min-height: 26px;\r\n    margin: 0;\r\n    padding: 0;\r\n    margin-bottom: 13px;\r\n    background-color: transparent;\r\n    border: 0;\r\n    background-image: url("+d+");\r\n    background-size: contain;\r\n    background-repeat: no-repeat;\r\n    \r\n    \r\n    \r\n    \r\n}\r\n\r\n.popup__close-button:hover {\r\n    opacity: 0.6;\r\n    cursor: pointer;\r\n}\r\n\r\n@media screen and (min-width: 700px) {\r\n    .popup__close-button {\r\n        min-width: 40px;\r\n        min-height: 40px;\r\n        margin: 0 0 0 430px;\r\n    }\r\n}","",{version:3,sources:["webpack://./src/blocks/popup/__close-button/popup__close-button.css"],names:[],mappings:"AAAA;IACI,eAAe;IACf,gBAAgB;IAChB,SAAS;IACT,UAAU;IACV,mBAAmB;IACnB,6BAA6B;IAC7B,SAAS;IACT,yDAAuD;IACvD,wBAAwB;IACxB,4BAA4B;;;;;AAKhC;;AAEA;IACI,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI;QACI,eAAe;QACf,gBAAgB;QAChB,mBAAmB;IACvB;AACJ",sourcesContent:['.popup__close-button {\r\n    min-width: 26px;\r\n    min-height: 26px;\r\n    margin: 0;\r\n    padding: 0;\r\n    margin-bottom: 13px;\r\n    background-color: transparent;\r\n    border: 0;\r\n    background-image: url("../../../images/close-icon.svg");\r\n    background-size: contain;\r\n    background-repeat: no-repeat;\r\n    \r\n    \r\n    \r\n    \r\n}\r\n\r\n.popup__close-button:hover {\r\n    opacity: 0.6;\r\n    cursor: pointer;\r\n}\r\n\r\n@media screen and (min-width: 700px) {\r\n    .popup__close-button {\r\n        min-width: 40px;\r\n        min-height: 40px;\r\n        margin: 0 0 0 430px;\r\n    }\r\n}'],sourceRoot:""}]),r.Z=c},2392:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".popup__container {\r\n    width: 88%;\r\n    z-index: 600;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n    height: 322px;\r\n}\r\n\r\n@media screen and (min-width:700px) {\r\n    .popup__container {\r\n        width: 470px;\r\n        height: 330px;\r\n        align-items: flex-start;\r\n    }\r\n}","",{version:3,sources:["webpack://./src/blocks/popup/__container/popup__container.css"],names:[],mappings:"AAAA;IACI,UAAU;IACV,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,qBAAqB;IACrB,aAAa;AACjB;;AAEA;IACI;QACI,YAAY;QACZ,aAAa;QACb,uBAAuB;IAC3B;AACJ",sourcesContent:[".popup__container {\r\n    width: 88%;\r\n    z-index: 600;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n    height: 322px;\r\n}\r\n\r\n@media screen and (min-width:700px) {\r\n    .popup__container {\r\n        width: 470px;\r\n        height: 330px;\r\n        align-items: flex-start;\r\n    }\r\n}"],sourceRoot:""}]),r.Z=A},3609:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".popup__image {\r\n    max-width: 75vw;\r\n    max-height: 75vh;\r\n}","",{version:3,sources:["webpack://./src/blocks/popup/__image/popup__image.css"],names:[],mappings:"AAAA;IACI,eAAe;IACf,gBAAgB;AACpB",sourcesContent:[".popup__image {\r\n    max-width: 75vw;\r\n    max-height: 75vh;\r\n}"],sourceRoot:""}]),r.Z=A},1646:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".popup__photo {\r\n    z-index: 600;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n}","",{version:3,sources:["webpack://./src/blocks/popup/__photo/popup__photo.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,qBAAqB;AACzB",sourcesContent:[".popup__photo {\r\n    z-index: 600;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n}"],sourceRoot:""}]),r.Z=A},782:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".popup__save-button {\r\n    background: #000000;\r\n    border: 0;\r\n    border-radius: 2px;\r\n    color: white;\r\n    font-size: 14px;\r\n    padding: 18px;\r\n    box-sizing: border-box;\r\n    margin-top: 16px;\r\n}\r\n\r\n.popup__save-button:hover {\r\n    opacity: 0.8;\r\n    cursor: pointer;\r\n}\r\n\r\n@media screen and (min-width:700px) {\r\n    .popup__save-button {\r\n        font-size: 18px;\r\n        padding: 13.66px 0 18.5px;\r\n        margin-top: 18px;\r\n    }\r\n}","",{version:3,sources:["webpack://./src/blocks/popup/__save-button/popup__save-button.css"],names:[],mappings:"AAAA;IACI,mBAAmB;IACnB,SAAS;IACT,kBAAkB;IAClB,YAAY;IACZ,eAAe;IACf,aAAa;IACb,sBAAsB;IACtB,gBAAgB;AACpB;;AAEA;IACI,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI;QACI,eAAe;QACf,yBAAyB;QACzB,gBAAgB;IACpB;AACJ",sourcesContent:[".popup__save-button {\r\n    background: #000000;\r\n    border: 0;\r\n    border-radius: 2px;\r\n    color: white;\r\n    font-size: 14px;\r\n    padding: 18px;\r\n    box-sizing: border-box;\r\n    margin-top: 16px;\r\n}\r\n\r\n.popup__save-button:hover {\r\n    opacity: 0.8;\r\n    cursor: pointer;\r\n}\r\n\r\n@media screen and (min-width:700px) {\r\n    .popup__save-button {\r\n        font-size: 18px;\r\n        padding: 13.66px 0 18.5px;\r\n        margin-top: 18px;\r\n    }\r\n}"],sourceRoot:""}]),r.Z=A},334:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".popup__title {\r\n    color: #000;\r\n    font-size: 18px;\r\n    font-weight: 900;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n@media screen and (min-width:700px) {\r\n    .popup__title {\r\n        font-size: 24px;\r\n    }\r\n}","",{version:3,sources:["webpack://./src/blocks/popup/__title/popup__title.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,eAAe;IACf,gBAAgB;IAChB,SAAS;IACT,UAAU;AACd;;AAEA;IACI;QACI,eAAe;IACnB;AACJ",sourcesContent:[".popup__title {\r\n    color: #000;\r\n    font-size: 18px;\r\n    font-weight: 900;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n@media screen and (min-width:700px) {\r\n    .popup__title {\r\n        font-size: 24px;\r\n    }\r\n}"],sourceRoot:""}]),r.Z=A},3839:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".popup_opened {\r\n    transition: opacity 0.5s ease-in-out, visibility 0.5s ease-in-out;\r\n    visibility: visible;\r\n    \r\n    opacity: 1;\r\n    \r\n    \r\n    \r\n    \r\n} ","",{version:3,sources:["webpack://./src/blocks/popup/_opened/popup_opened.css"],names:[],mappings:"AAAA;IACI,iEAAiE;IACjE,mBAAmB;;IAEnB,UAAU;;;;;AAKd",sourcesContent:[".popup_opened {\r\n    transition: opacity 0.5s ease-in-out, visibility 0.5s ease-in-out;\r\n    visibility: visible;\r\n    \r\n    opacity: 1;\r\n    \r\n    \r\n    \r\n    \r\n} "],sourceRoot:""}]),r.Z=A},2221:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".popup {\r\n  transition: opacity 0.5s ease-in-out, visibility 0.5s ease-in-out;\r\n  visibility: hidden;\r\n  \r\n  opacity: 0;\r\n  display: flex;\r\n  height: 100%;\r\n  width: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  position: fixed;\r\n  top: 0;\r\n  z-index: 500;\r\n  align-items: center;\r\n  justify-content: center;\r\n}","",{version:3,sources:["webpack://./src/blocks/popup/popup.css"],names:[],mappings:"AAAA;EACE,iEAAiE;EACjE,kBAAkB;;EAElB,UAAU;EACV,aAAa;EACb,YAAY;EACZ,WAAW;EACX,8BAA8B;EAC9B,eAAe;EACf,MAAM;EACN,YAAY;EACZ,mBAAmB;EACnB,uBAAuB;AACzB",sourcesContent:[".popup {\r\n  transition: opacity 0.5s ease-in-out, visibility 0.5s ease-in-out;\r\n  visibility: hidden;\r\n  \r\n  opacity: 0;\r\n  display: flex;\r\n  height: 100%;\r\n  width: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  position: fixed;\r\n  top: 0;\r\n  z-index: 500;\r\n  align-items: center;\r\n  justify-content: center;\r\n}"],sourceRoot:""}]),r.Z=A},8814:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i),s=e(1667),a=e.n(s),p=new URL(e(2604),e.b),c=A()(o()),d=a()(p);c.push([n.id,".profile__add-button {\r\n    width: 282px;\r\n    height: 50px;\r\n    border: 2px solid #FFFFFF;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    background-color: transparent;\r\n    background-image: url("+d+");\r\n    background-repeat: no-repeat;\r\n    background-size: 16px 16px;\r\n    display: flex;\r\n    background-position: 50%;\r\n    padding: 0;\r\n}\r\n\r\n.profile__add-button:hover {\r\n    opacity: 0.6;\r\n    cursor: pointer;\r\n}\r\n\r\n@media screen and (min-width: 700px) {\r\n    .profile__add-button {\r\n        min-width: 150px;\r\n        max-width: 150px;\r\n        background-size: 22px 22px;\r\n        margin-left: auto;\r\n    }\r\n}","",{version:3,sources:["webpack://./src/blocks/profile/__add-button/profile__add-button.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,YAAY;IACZ,yBAAyB;IACzB,kBAAkB;IAClB,sBAAsB;IACtB,6BAA6B;IAC7B,yDAAgD;IAChD,4BAA4B;IAC5B,0BAA0B;IAC1B,aAAa;IACb,wBAAwB;IACxB,UAAU;AACd;;AAEA;IACI,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI;QACI,gBAAgB;QAChB,gBAAgB;QAChB,0BAA0B;QAC1B,iBAAiB;IACrB;AACJ",sourcesContent:['.profile__add-button {\r\n    width: 282px;\r\n    height: 50px;\r\n    border: 2px solid #FFFFFF;\r\n    border-radius: 2px;\r\n    box-sizing: border-box;\r\n    background-color: transparent;\r\n    background-image: url("../../../images/add.svg");\r\n    background-repeat: no-repeat;\r\n    background-size: 16px 16px;\r\n    display: flex;\r\n    background-position: 50%;\r\n    padding: 0;\r\n}\r\n\r\n.profile__add-button:hover {\r\n    opacity: 0.6;\r\n    cursor: pointer;\r\n}\r\n\r\n@media screen and (min-width: 700px) {\r\n    .profile__add-button {\r\n        min-width: 150px;\r\n        max-width: 150px;\r\n        background-size: 22px 22px;\r\n        margin-left: auto;\r\n    }\r\n}'],sourceRoot:""}]),r.Z=c},7923:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".profile__avatar {\r\n    border-radius: 50%;\r\n    width: 120px;\r\n    height: 120px;\r\n    margin: 0;\r\n    padding: 0;\r\n}","",{version:3,sources:["webpack://./src/blocks/profile/__avatar/profile__avatar.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,SAAS;IACT,UAAU;AACd",sourcesContent:[".profile__avatar {\r\n    border-radius: 50%;\r\n    width: 120px;\r\n    height: 120px;\r\n    margin: 0;\r\n    padding: 0;\r\n}"],sourceRoot:""}]),r.Z=A},325:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".profile__edit-button-image {\r\n    padding: 10.5px;\r\n}","",{version:3,sources:["webpack://./src/blocks/profile/__edit-button-image/profile__edit-button-image.css"],names:[],mappings:"AAAA;IACI,eAAe;AACnB",sourcesContent:[".profile__edit-button-image {\r\n    padding: 10.5px;\r\n}"],sourceRoot:""}]),r.Z=A},863:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i),s=e(1667),a=e.n(s),p=new URL(e(5666),e.b),c=A()(o()),d=a()(p);c.push([n.id,".profile__edit-button {\r\n    border: 1px solid #FFFFFF;\r\n    box-sizing: border-box;\r\n    background-color: transparent;\r\n    min-width: 18px;\r\n    height: 18px;\r\n    \r\n    background-image: url("+d+");\r\n    background-size: 7.5px 7.5px;\r\n    background-repeat: no-repeat;\r\n    background-position: 50% 40%;\r\n    padding: 0;\r\n}\r\n\r\n.profile__edit-button:hover {\r\n    opacity: 0.6;\r\n    cursor: pointer;\r\n}\r\n\r\n@media screen and (min-width: 700px) {\r\n    .profile__edit-button {\r\n        min-width: 24px;\r\n        min-height: 24px;\r\n        background-size: 10px 10px;\r\n        \r\n    }\r\n}\r\n    \r\n","",{version:3,sources:["webpack://./src/blocks/profile/__edit-button/profile__edit-button.css"],names:[],mappings:"AAAA;IACI,yBAAyB;IACzB,sBAAsB;IACtB,6BAA6B;IAC7B,eAAe;IACf,YAAY;;IAEZ,yDAAiD;IACjD,4BAA4B;IAC5B,4BAA4B;IAC5B,4BAA4B;IAC5B,UAAU;AACd;;AAEA;IACI,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI;QACI,eAAe;QACf,gBAAgB;QAChB,0BAA0B;;IAE9B;AACJ",sourcesContent:['.profile__edit-button {\r\n    border: 1px solid #FFFFFF;\r\n    box-sizing: border-box;\r\n    background-color: transparent;\r\n    min-width: 18px;\r\n    height: 18px;\r\n    \r\n    background-image: url("../../../images/edit.svg");\r\n    background-size: 7.5px 7.5px;\r\n    background-repeat: no-repeat;\r\n    background-position: 50% 40%;\r\n    padding: 0;\r\n}\r\n\r\n.profile__edit-button:hover {\r\n    opacity: 0.6;\r\n    cursor: pointer;\r\n}\r\n\r\n@media screen and (min-width: 700px) {\r\n    .profile__edit-button {\r\n        min-width: 24px;\r\n        min-height: 24px;\r\n        background-size: 10px 10px;\r\n        \r\n    }\r\n}\r\n    \r\n'],sourceRoot:""}]),r.Z=c},185:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".profile__info {\r\n    padding: 30px 19px 36px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\n@media screen and (min-width: 700px) {\r\n    .profile__info {\r\n        padding: 0 19px 0 30px;\r\n        align-items: flex-start;\r\n    }\r\n}","",{version:3,sources:["webpack://./src/blocks/profile/__info/profile__info.css"],names:[],mappings:"AAAA;IACI,uBAAuB;IACvB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI;QACI,sBAAsB;QACtB,uBAAuB;IAC3B;AACJ",sourcesContent:[".profile__info {\r\n    padding: 30px 19px 36px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\n@media screen and (min-width: 700px) {\r\n    .profile__info {\r\n        padding: 0 19px 0 30px;\r\n        align-items: flex-start;\r\n    }\r\n}"],sourceRoot:""}]),r.Z=A},7796:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".profile__name-group {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    padding: 0;\r\n    margin: 0;\r\n}","",{version:3,sources:["webpack://./src/blocks/profile/__name-group/profile__name-group.css"],names:[],mappings:"AAAA;IACI,oBAAoB;IACpB,mBAAmB;IACnB,UAAU;IACV,SAAS;AACb",sourcesContent:[".profile__name-group {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    padding: 0;\r\n    margin: 0;\r\n}"],sourceRoot:""}]),r.Z=A},4060:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".profile__name {\r\n    font-weight: 500;\r\n    font-size: 22px;\r\n    margin: 0 10px 0 0;\r\n    overflow: hidden;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 1;\r\n    -webkit-box-orient: vertical;\r\n}\r\n\r\n@media screen and (min-width: 700px) {\r\n    .profile__name {\r\n        font-size: 28px;\r\n        margin-right: 18px;\r\n        line-height: 1.14;\r\n    }\r\n}\r\n@media screen and (min-width: 980px) {\r\n    .profile__name {\r\n        font-size: 42px;\r\n    }\r\n}","",{version:3,sources:["webpack://./src/blocks/profile/__name/profile__name.css"],names:[],mappings:"AAAA;IACI,gBAAgB;IAChB,eAAe;IACf,kBAAkB;IAClB,gBAAgB;IAChB,oBAAoB;IACpB,qBAAqB;IACrB,4BAA4B;AAChC;;AAEA;IACI;QACI,eAAe;QACf,kBAAkB;QAClB,iBAAiB;IACrB;AACJ;AACA;IACI;QACI,eAAe;IACnB;AACJ",sourcesContent:[".profile__name {\r\n    font-weight: 500;\r\n    font-size: 22px;\r\n    margin: 0 10px 0 0;\r\n    overflow: hidden;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 1;\r\n    -webkit-box-orient: vertical;\r\n}\r\n\r\n@media screen and (min-width: 700px) {\r\n    .profile__name {\r\n        font-size: 28px;\r\n        margin-right: 18px;\r\n        line-height: 1.14;\r\n    }\r\n}\r\n@media screen and (min-width: 980px) {\r\n    .profile__name {\r\n        font-size: 42px;\r\n    }\r\n}"],sourceRoot:""}]),r.Z=A},6705:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".profile__subheading {\r\n    font-size: 14px;\r\n    text-align: center;\r\n    margin: 14px 0 0;\r\n    overflow: hidden;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 1;\r\n    -webkit-box-orient: vertical;\r\n    padding: 0;\r\n}\r\n\r\n@media screen and (min-width: 700px) {\r\n    .profile__subheading {\r\n        text-align: left;\r\n        margin-top: 16px;\r\n        font-size: 18px;\r\n    }\r\n}","",{version:3,sources:["webpack://./src/blocks/profile/__subheading/profile__subheading.css"],names:[],mappings:"AAAA;IACI,eAAe;IACf,kBAAkB;IAClB,gBAAgB;IAChB,gBAAgB;IAChB,oBAAoB;IACpB,qBAAqB;IACrB,4BAA4B;IAC5B,UAAU;AACd;;AAEA;IACI;QACI,gBAAgB;QAChB,gBAAgB;QAChB,eAAe;IACnB;AACJ",sourcesContent:[".profile__subheading {\r\n    font-size: 14px;\r\n    text-align: center;\r\n    margin: 14px 0 0;\r\n    overflow: hidden;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 1;\r\n    -webkit-box-orient: vertical;\r\n    padding: 0;\r\n}\r\n\r\n@media screen and (min-width: 700px) {\r\n    .profile__subheading {\r\n        text-align: left;\r\n        margin-top: 16px;\r\n        font-size: 18px;\r\n    }\r\n}"],sourceRoot:""}]),r.Z=A},9960:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,".profile {\r\n    display: flex;\r\n    flex-direction:column;\r\n    margin: 38.25px auto 36px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n}\r\n\r\n@media screen and (min-width: 700px) {\r\n    .profile {\r\n        flex-direction: row;\r\n        margin: 36.25px 0 46.25px;\r\n        justify-content: flex-start;\r\n        \r\n    }\r\n}","",{version:3,sources:["webpack://./src/blocks/profile/profile.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,qBAAqB;IACrB,yBAAyB;IACzB,uBAAuB;IACvB,mBAAmB;IACnB,WAAW;AACf;;AAEA;IACI;QACI,mBAAmB;QACnB,yBAAyB;QACzB,2BAA2B;;IAE/B;AACJ",sourcesContent:[".profile {\r\n    display: flex;\r\n    flex-direction:column;\r\n    margin: 38.25px auto 36px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n}\r\n\r\n@media screen and (min-width: 700px) {\r\n    .profile {\r\n        flex-direction: row;\r\n        margin: 36.25px 0 46.25px;\r\n        justify-content: flex-start;\r\n        \r\n    }\r\n}"],sourceRoot:""}]),r.Z=A},748:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i),s=e(4373),a=e(8306),p=e(4272),c=e(549),d=e(6324),l=e(5024),u=e(7742),m=e(9508),h=e(3180),C=e(7950),f=e(182),g=e(6060),b=e(278),I=e(2820),B=e(30),x=e(2843),_=e(2496),E=e(2525),v=e(2221),w=e(1175),y=e(9393),k=e(4380),z=e(6925),S=e(2392),Z=e(808),R=e(6068),F=e(1342),M=e(9228),U=e(187),j=e(8445),L=e(3609),Y=e(1646),Q=e(782),q=e(334),T=e(3839),D=e(9960),W=e(8814),N=e(7923),J=e(325),V=e(863),G=e(185),O=e(7796),P=e(4060),X=e(6705),$=A()(o());$.i(s.Z),$.i(a.Z),$.i(p.Z),$.i(c.Z),$.i(d.Z),$.i(l.Z),$.i(u.Z),$.i(m.Z),$.i(h.Z),$.i(C.Z),$.i(f.Z),$.i(g.Z),$.i(b.Z),$.i(I.Z),$.i(B.Z),$.i(x.Z),$.i(_.Z),$.i(E.Z),$.i(v.Z),$.i(w.Z),$.i(y.Z),$.i(k.Z),$.i(z.Z),$.i(S.Z),$.i(Z.Z),$.i(R.Z),$.i(F.Z),$.i(M.Z),$.i(U.Z),$.i(j.Z),$.i(L.Z),$.i(Y.Z),$.i(Q.Z),$.i(q.Z),$.i(T.Z),$.i(D.Z),$.i(W.Z),$.i(N.Z),$.i(J.Z),$.i(V.Z),$.i(G.Z),$.i(O.Z),$.i(P.Z),$.i(X.Z),$.push([n.id,"\r\n\r\n\r\n\r\n\r\n\r\n","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]),r.Z=$},8306:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i),s=e(1667),a=e.n(s),p=new URL(e(2815),e.b),c=new URL(e(3304),e.b),d=new URL(e(2132),e.b),l=A()(o()),u=a()(p),m=a()(c),h=a()(d);l.push([n.id,"@font-face {\r\n    font-family: 'Inter';\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    font-display: swap;\r\n    src: url("+u+") format(\"woff\");\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    -webkit-text-size-adjust: 100%;\r\n    -ms-text-size-adjust: 100%;\r\n    -moz-text-size-adjust: 100%;\r\n}\r\n\r\n@font-face {\r\n    font-family: 'Inter';\r\n    font-style: normal;\r\n    font-weight: 900;\r\n    font-display: swap;\r\n    src: url("+m+") format(\"woff\");\r\n    text-rendering: optimizeLegibility;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    -webkit-text-size-adjust: 100%;\r\n    -ms-text-size-adjust: 100%;\r\n    -moz-text-size-adjust: 100%;\r\n}\r\n\r\n@font-face {\r\n    font-family: 'Inter';\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-display: swap;\r\n    src: url("+h+') format("woff");\r\n    text-rendering: optimizeLegibility;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    -webkit-text-size-adjust: 100%;\r\n    -ms-text-size-adjust: 100%;\r\n    -moz-text-size-adjust: 100%;\r\n}',"",{version:3,sources:["webpack://./src/vendor/fonts/fonts.css"],names:[],mappings:"AAAA;IACI,oBAAoB;IACpB,kBAAkB;IAClB,gBAAgB;IAChB,kBAAkB;IAClB,2DAAoD;IACpD,mCAAmC;IACnC,kCAAkC;IAClC,8BAA8B;IAC9B,0BAA0B;IAC1B,2BAA2B;AAC/B;;AAEA;IACI,oBAAoB;IACpB,kBAAkB;IAClB,gBAAgB;IAChB,kBAAkB;IAClB,2DAAkD;IAClD,kCAAkC;IAClC,mCAAmC;IACnC,kCAAkC;IAClC,8BAA8B;IAC9B,0BAA0B;IAC1B,2BAA2B;AAC/B;;AAEA;IACI,oBAAoB;IACpB,kBAAkB;IAClB,gBAAgB;IAChB,kBAAkB;IAClB,2DAAmD;IACnD,kCAAkC;IAClC,mCAAmC;IACnC,kCAAkC;IAClC,8BAA8B;IAC9B,0BAA0B;IAC1B,2BAA2B;AAC/B",sourcesContent:['@font-face {\r\n    font-family: \'Inter\';\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    font-display: swap;\r\n    src: url("Inter-Regular.woff?v=3.19") format("woff");\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    -webkit-text-size-adjust: 100%;\r\n    -ms-text-size-adjust: 100%;\r\n    -moz-text-size-adjust: 100%;\r\n}\r\n\r\n@font-face {\r\n    font-family: \'Inter\';\r\n    font-style: normal;\r\n    font-weight: 900;\r\n    font-display: swap;\r\n    src: url("Inter-Black.woff?v=3.19") format("woff");\r\n    text-rendering: optimizeLegibility;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    -webkit-text-size-adjust: 100%;\r\n    -ms-text-size-adjust: 100%;\r\n    -moz-text-size-adjust: 100%;\r\n}\r\n\r\n@font-face {\r\n    font-family: \'Inter\';\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    font-display: swap;\r\n    src: url("Inter-Medium.woff?v=3.19") format("woff");\r\n    text-rendering: optimizeLegibility;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    -webkit-text-size-adjust: 100%;\r\n    -ms-text-size-adjust: 100%;\r\n    -moz-text-size-adjust: 100%;\r\n}'],sourceRoot:""}]),r.Z=l},4373:function(n,r,e){var t=e(7537),o=e.n(t),i=e(3645),A=e.n(i)()(o());A.push([n.id,'/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\r\n\r\n/* Document\r\n   ========================================================================== */\r\n\r\n/**\r\n * 1. Correct the line height in all browsers.\r\n * 2. Prevent adjustments of font size after orientation changes in iOS.\r\n */\r\n\r\n html {\r\n    line-height: 1.15;\r\n    /* 1 */\r\n    -webkit-text-size-adjust: 100%;\r\n    /* 2 */\r\n  }\r\n  \r\n  /* Sections\r\n     ========================================================================== */\r\n  \r\n  /**\r\n   * Remove the margin in all browsers.\r\n   */\r\n  \r\n  body {\r\n    margin: 0;\r\n  }\r\n  \r\n  /**\r\n   * Render the `main` element consistently in IE.\r\n   */\r\n  \r\n  main {\r\n    display: block;\r\n  }\r\n  \r\n  /**\r\n   * Correct the font size and margin on `h1` elements within `section` and\r\n   * `article` contexts in Chrome, Firefox, and Safari.\r\n   */\r\n  \r\n  h1 {\r\n    font-size: 2em;\r\n    margin: 0.67em 0;\r\n  }\r\n  \r\n  /* Grouping content\r\n     ========================================================================== */\r\n  \r\n  /**\r\n   * 1. Add the correct box sizing in Firefox.\r\n   * 2. Show the overflow in Edge and IE.\r\n   */\r\n  \r\n  hr {\r\n    box-sizing: content-box;\r\n    /* 1 */\r\n    height: 0;\r\n    /* 1 */\r\n    overflow: visible;\r\n    /* 2 */\r\n  }\r\n  \r\n  /**\r\n   * 1. Correct the inheritance and scaling of font size in all browsers.\r\n   * 2. Correct the odd `em` font sizing in all browsers.\r\n   */\r\n  \r\n  pre {\r\n    font-family: monospace, monospace;\r\n    /* 1 */\r\n    font-size: 1em;\r\n    /* 2 */\r\n  }\r\n  \r\n  /* Text-level semantics\r\n     ========================================================================== */\r\n  \r\n  /**\r\n   * Remove the gray background on active links in IE 10.\r\n   */\r\n  \r\n  a {\r\n    background-color: transparent;\r\n  }\r\n  \r\n  /**\r\n   * 1. Remove the bottom border in Chrome 57-\r\n   * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\r\n   */\r\n  \r\n  abbr[title] {\r\n    border-bottom: none;\r\n    /* 1 */\r\n    text-decoration: underline;\r\n    /* 2 */\r\n    text-decoration: underline dotted;\r\n    /* 2 */\r\n  }\r\n  \r\n  /**\r\n   * Add the correct font weight in Chrome, Edge, and Safari.\r\n   */\r\n  \r\n  b, strong {\r\n    font-weight: bolder;\r\n  }\r\n  \r\n  /**\r\n   * 1. Correct the inheritance and scaling of font size in all browsers.\r\n   * 2. Correct the odd `em` font sizing in all browsers.\r\n   */\r\n  \r\n  code, kbd, samp {\r\n    font-family: monospace, monospace;\r\n    /* 1 */\r\n    font-size: 1em;\r\n    /* 2 */\r\n  }\r\n  \r\n  /**\r\n   * Add the correct font size in all browsers.\r\n   */\r\n  \r\n  small {\r\n    font-size: 80%;\r\n  }\r\n  \r\n  /**\r\n   * Prevent `sub` and `sup` elements from affecting the line height in\r\n   * all browsers.\r\n   */\r\n  \r\n  sub, sup {\r\n    font-size: 75%;\r\n    line-height: 0;\r\n    position: relative;\r\n    vertical-align: baseline;\r\n  }\r\n  \r\n  sub {\r\n    bottom: -0.25em;\r\n  }\r\n  \r\n  sup {\r\n    top: -0.5em;\r\n  }\r\n  \r\n  /* Embedded content\r\n     ========================================================================== */\r\n  \r\n  /**\r\n   * Remove the border on images inside links in IE 10.\r\n   */\r\n  \r\n  img {\r\n    border-style: none;\r\n  }\r\n  \r\n  /* Forms\r\n     ========================================================================== */\r\n  \r\n  /**\r\n   * 1. Change the font styles in all browsers.\r\n   * 2. Remove the margin in Firefox and Safari.\r\n   */\r\n  \r\n  button, input, optgroup, select, textarea {\r\n    font-family: inherit;\r\n    /* 1 */\r\n    font-size: 100%;\r\n    /* 1 */\r\n    line-height: 1.15;\r\n    /* 1 */\r\n    margin: 0;\r\n    /* 2 */\r\n  }\r\n  \r\n  /**\r\n   * Show the overflow in IE.\r\n   * 1. Show the overflow in Edge.\r\n   */\r\n  \r\n  button, input {\r\n    /* 1 */\r\n    overflow: visible;\r\n  }\r\n  \r\n  /**\r\n   * Remove the inheritance of text transform in Edge, Firefox, and IE.\r\n   * 1. Remove the inheritance of text transform in Firefox.\r\n   */\r\n  \r\n  button, select {\r\n    /* 1 */\r\n    text-transform: none;\r\n  }\r\n  \r\n  /**\r\n   * Correct the inability to style clickable types in iOS and Safari.\r\n   */\r\n  \r\n  button, [type="button"], [type="reset"], [type="submit"] {\r\n    -webkit-appearance: button;\r\n  }\r\n  \r\n  /**\r\n   * Remove the inner border and padding in Firefox.\r\n   */\r\n  \r\n  button::-moz-focus-inner, [type="button"]::-moz-focus-inner, [type="reset"]::-moz-focus-inner, [type="submit"]::-moz-focus-inner {\r\n    border-style: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  /**\r\n   * Restore the focus styles unset by the previous rule.\r\n   */\r\n  \r\n  button:-moz-focusring, [type="button"]:-moz-focusring, [type="reset"]:-moz-focusring, [type="submit"]:-moz-focusring {\r\n    outline: 1px dotted ButtonText;\r\n  }\r\n  \r\n  /**\r\n   * Correct the padding in Firefox.\r\n   */\r\n  \r\n  fieldset {\r\n    padding: 0.35em 0.75em 0.625em;\r\n  }\r\n  \r\n  /**\r\n   * 1. Correct the text wrapping in Edge and IE.\r\n   * 2. Correct the color inheritance from `fieldset` elements in IE.\r\n   * 3. Remove the padding so developers are not caught out when they zero out\r\n   *    `fieldset` elements in all browsers.\r\n   */\r\n  \r\n  legend {\r\n    box-sizing: border-box;\r\n    /* 1 */\r\n    color: inherit;\r\n    /* 2 */\r\n    display: table;\r\n    /* 1 */\r\n    max-width: 100%;\r\n    /* 1 */\r\n    padding: 0;\r\n    /* 3 */\r\n    white-space: normal;\r\n    /* 1 */\r\n  }\r\n  \r\n  /**\r\n   * Add the correct vertical alignment in Chrome, Firefox, and Opera.\r\n   */\r\n  \r\n  progress {\r\n    vertical-align: baseline;\r\n  }\r\n  \r\n  /**\r\n   * Remove the default vertical scrollbar in IE 10+.\r\n   */\r\n  \r\n  textarea {\r\n    overflow: auto;\r\n  }\r\n  \r\n  /**\r\n   * 1. Add the correct box sizing in IE 10.\r\n   * 2. Remove the padding in IE 10.\r\n   */\r\n  \r\n  [type="checkbox"], [type="radio"] {\r\n    box-sizing: border-box;\r\n    /* 1 */\r\n    padding: 0;\r\n    /* 2 */\r\n  }\r\n  \r\n  /**\r\n   * Correct the cursor style of increment and decrement buttons in Chrome.\r\n   */\r\n  \r\n  [type="number"]::-webkit-inner-spin-button, [type="number"]::-webkit-outer-spin-button {\r\n    height: auto;\r\n  }\r\n  \r\n  /**\r\n   * 1. Correct the odd appearance in Chrome and Safari.\r\n   * 2. Correct the outline style in Safari.\r\n   */\r\n  \r\n  [type="search"] {\r\n    -webkit-appearance: textfield;\r\n    /* 1 */\r\n    outline-offset: -2px;\r\n    /* 2 */\r\n  }\r\n  \r\n  /**\r\n   * Remove the inner padding in Chrome and Safari on macOS.\r\n   */\r\n  \r\n  [type="search"]::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n  \r\n  /**\r\n   * 1. Correct the inability to style clickable types in iOS and Safari.\r\n   * 2. Change font properties to `inherit` in Safari.\r\n   */\r\n  \r\n  ::-webkit-file-upload-button {\r\n    -webkit-appearance: button;\r\n    /* 1 */\r\n    font: inherit;\r\n    /* 2 */\r\n  }\r\n  \r\n  /* Interactive\r\n     ========================================================================== */\r\n  \r\n  /*\r\n   * Add the correct display in Edge, IE 10+, and Firefox.\r\n   */\r\n  \r\n  details {\r\n    display: block;\r\n  }\r\n  \r\n  /*\r\n   * Add the correct display in all browsers.\r\n   */\r\n  \r\n  summary {\r\n    display: list-item;\r\n  }\r\n  \r\n  /* Misc\r\n     ========================================================================== */\r\n  \r\n  /**\r\n   * Add the correct display in IE 10+.\r\n   */\r\n  \r\n  template {\r\n    display: none;\r\n  }\r\n  \r\n  /**\r\n   * Add the correct display in IE 10.\r\n   */\r\n  \r\n  [hidden] {\r\n    display: none;\r\n  }',"",{version:3,sources:["webpack://./src/vendor/normalize.css"],names:[],mappings:"AAAA,2EAA2E;;AAE3E;+EAC+E;;AAE/E;;;EAGE;;CAED;IACG,iBAAiB;IACjB,MAAM;IACN,8BAA8B;IAC9B,MAAM;EACR;;EAEA;iFAC+E;;EAE/E;;IAEE;;EAEF;IACE,SAAS;EACX;;EAEA;;IAEE;;EAEF;IACE,cAAc;EAChB;;EAEA;;;IAGE;;EAEF;IACE,cAAc;IACd,gBAAgB;EAClB;;EAEA;iFAC+E;;EAE/E;;;IAGE;;EAEF;IACE,uBAAuB;IACvB,MAAM;IACN,SAAS;IACT,MAAM;IACN,iBAAiB;IACjB,MAAM;EACR;;EAEA;;;IAGE;;EAEF;IACE,iCAAiC;IACjC,MAAM;IACN,cAAc;IACd,MAAM;EACR;;EAEA;iFAC+E;;EAE/E;;IAEE;;EAEF;IACE,6BAA6B;EAC/B;;EAEA;;;IAGE;;EAEF;IACE,mBAAmB;IACnB,MAAM;IACN,0BAA0B;IAC1B,MAAM;IACN,iCAAiC;IACjC,MAAM;EACR;;EAEA;;IAEE;;EAEF;IACE,mBAAmB;EACrB;;EAEA;;;IAGE;;EAEF;IACE,iCAAiC;IACjC,MAAM;IACN,cAAc;IACd,MAAM;EACR;;EAEA;;IAEE;;EAEF;IACE,cAAc;EAChB;;EAEA;;;IAGE;;EAEF;IACE,cAAc;IACd,cAAc;IACd,kBAAkB;IAClB,wBAAwB;EAC1B;;EAEA;IACE,eAAe;EACjB;;EAEA;IACE,WAAW;EACb;;EAEA;iFAC+E;;EAE/E;;IAEE;;EAEF;IACE,kBAAkB;EACpB;;EAEA;iFAC+E;;EAE/E;;;IAGE;;EAEF;IACE,oBAAoB;IACpB,MAAM;IACN,eAAe;IACf,MAAM;IACN,iBAAiB;IACjB,MAAM;IACN,SAAS;IACT,MAAM;EACR;;EAEA;;;IAGE;;EAEF;IACE,MAAM;IACN,iBAAiB;EACnB;;EAEA;;;IAGE;;EAEF;IACE,MAAM;IACN,oBAAoB;EACtB;;EAEA;;IAEE;;EAEF;IACE,0BAA0B;EAC5B;;EAEA;;IAEE;;EAEF;IACE,kBAAkB;IAClB,UAAU;EACZ;;EAEA;;IAEE;;EAEF;IACE,8BAA8B;EAChC;;EAEA;;IAEE;;EAEF;IACE,8BAA8B;EAChC;;EAEA;;;;;IAKE;;EAEF;IACE,sBAAsB;IACtB,MAAM;IACN,cAAc;IACd,MAAM;IACN,cAAc;IACd,MAAM;IACN,eAAe;IACf,MAAM;IACN,UAAU;IACV,MAAM;IACN,mBAAmB;IACnB,MAAM;EACR;;EAEA;;IAEE;;EAEF;IACE,wBAAwB;EAC1B;;EAEA;;IAEE;;EAEF;IACE,cAAc;EAChB;;EAEA;;;IAGE;;EAEF;IACE,sBAAsB;IACtB,MAAM;IACN,UAAU;IACV,MAAM;EACR;;EAEA;;IAEE;;EAEF;IACE,YAAY;EACd;;EAEA;;;IAGE;;EAEF;IACE,6BAA6B;IAC7B,MAAM;IACN,oBAAoB;IACpB,MAAM;EACR;;EAEA;;IAEE;;EAEF;IACE,wBAAwB;EAC1B;;EAEA;;;IAGE;;EAEF;IACE,0BAA0B;IAC1B,MAAM;IACN,aAAa;IACb,MAAM;EACR;;EAEA;iFAC+E;;EAE/E;;IAEE;;EAEF;IACE,cAAc;EAChB;;EAEA;;IAEE;;EAEF;IACE,kBAAkB;EACpB;;EAEA;iFAC+E;;EAE/E;;IAEE;;EAEF;IACE,aAAa;EACf;;EAEA;;IAEE;;EAEF;IACE,aAAa;EACf",sourcesContent:['/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\r\n\r\n/* Document\r\n   ========================================================================== */\r\n\r\n/**\r\n * 1. Correct the line height in all browsers.\r\n * 2. Prevent adjustments of font size after orientation changes in iOS.\r\n */\r\n\r\n html {\r\n    line-height: 1.15;\r\n    /* 1 */\r\n    -webkit-text-size-adjust: 100%;\r\n    /* 2 */\r\n  }\r\n  \r\n  /* Sections\r\n     ========================================================================== */\r\n  \r\n  /**\r\n   * Remove the margin in all browsers.\r\n   */\r\n  \r\n  body {\r\n    margin: 0;\r\n  }\r\n  \r\n  /**\r\n   * Render the `main` element consistently in IE.\r\n   */\r\n  \r\n  main {\r\n    display: block;\r\n  }\r\n  \r\n  /**\r\n   * Correct the font size and margin on `h1` elements within `section` and\r\n   * `article` contexts in Chrome, Firefox, and Safari.\r\n   */\r\n  \r\n  h1 {\r\n    font-size: 2em;\r\n    margin: 0.67em 0;\r\n  }\r\n  \r\n  /* Grouping content\r\n     ========================================================================== */\r\n  \r\n  /**\r\n   * 1. Add the correct box sizing in Firefox.\r\n   * 2. Show the overflow in Edge and IE.\r\n   */\r\n  \r\n  hr {\r\n    box-sizing: content-box;\r\n    /* 1 */\r\n    height: 0;\r\n    /* 1 */\r\n    overflow: visible;\r\n    /* 2 */\r\n  }\r\n  \r\n  /**\r\n   * 1. Correct the inheritance and scaling of font size in all browsers.\r\n   * 2. Correct the odd `em` font sizing in all browsers.\r\n   */\r\n  \r\n  pre {\r\n    font-family: monospace, monospace;\r\n    /* 1 */\r\n    font-size: 1em;\r\n    /* 2 */\r\n  }\r\n  \r\n  /* Text-level semantics\r\n     ========================================================================== */\r\n  \r\n  /**\r\n   * Remove the gray background on active links in IE 10.\r\n   */\r\n  \r\n  a {\r\n    background-color: transparent;\r\n  }\r\n  \r\n  /**\r\n   * 1. Remove the bottom border in Chrome 57-\r\n   * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\r\n   */\r\n  \r\n  abbr[title] {\r\n    border-bottom: none;\r\n    /* 1 */\r\n    text-decoration: underline;\r\n    /* 2 */\r\n    text-decoration: underline dotted;\r\n    /* 2 */\r\n  }\r\n  \r\n  /**\r\n   * Add the correct font weight in Chrome, Edge, and Safari.\r\n   */\r\n  \r\n  b, strong {\r\n    font-weight: bolder;\r\n  }\r\n  \r\n  /**\r\n   * 1. Correct the inheritance and scaling of font size in all browsers.\r\n   * 2. Correct the odd `em` font sizing in all browsers.\r\n   */\r\n  \r\n  code, kbd, samp {\r\n    font-family: monospace, monospace;\r\n    /* 1 */\r\n    font-size: 1em;\r\n    /* 2 */\r\n  }\r\n  \r\n  /**\r\n   * Add the correct font size in all browsers.\r\n   */\r\n  \r\n  small {\r\n    font-size: 80%;\r\n  }\r\n  \r\n  /**\r\n   * Prevent `sub` and `sup` elements from affecting the line height in\r\n   * all browsers.\r\n   */\r\n  \r\n  sub, sup {\r\n    font-size: 75%;\r\n    line-height: 0;\r\n    position: relative;\r\n    vertical-align: baseline;\r\n  }\r\n  \r\n  sub {\r\n    bottom: -0.25em;\r\n  }\r\n  \r\n  sup {\r\n    top: -0.5em;\r\n  }\r\n  \r\n  /* Embedded content\r\n     ========================================================================== */\r\n  \r\n  /**\r\n   * Remove the border on images inside links in IE 10.\r\n   */\r\n  \r\n  img {\r\n    border-style: none;\r\n  }\r\n  \r\n  /* Forms\r\n     ========================================================================== */\r\n  \r\n  /**\r\n   * 1. Change the font styles in all browsers.\r\n   * 2. Remove the margin in Firefox and Safari.\r\n   */\r\n  \r\n  button, input, optgroup, select, textarea {\r\n    font-family: inherit;\r\n    /* 1 */\r\n    font-size: 100%;\r\n    /* 1 */\r\n    line-height: 1.15;\r\n    /* 1 */\r\n    margin: 0;\r\n    /* 2 */\r\n  }\r\n  \r\n  /**\r\n   * Show the overflow in IE.\r\n   * 1. Show the overflow in Edge.\r\n   */\r\n  \r\n  button, input {\r\n    /* 1 */\r\n    overflow: visible;\r\n  }\r\n  \r\n  /**\r\n   * Remove the inheritance of text transform in Edge, Firefox, and IE.\r\n   * 1. Remove the inheritance of text transform in Firefox.\r\n   */\r\n  \r\n  button, select {\r\n    /* 1 */\r\n    text-transform: none;\r\n  }\r\n  \r\n  /**\r\n   * Correct the inability to style clickable types in iOS and Safari.\r\n   */\r\n  \r\n  button, [type="button"], [type="reset"], [type="submit"] {\r\n    -webkit-appearance: button;\r\n  }\r\n  \r\n  /**\r\n   * Remove the inner border and padding in Firefox.\r\n   */\r\n  \r\n  button::-moz-focus-inner, [type="button"]::-moz-focus-inner, [type="reset"]::-moz-focus-inner, [type="submit"]::-moz-focus-inner {\r\n    border-style: none;\r\n    padding: 0;\r\n  }\r\n  \r\n  /**\r\n   * Restore the focus styles unset by the previous rule.\r\n   */\r\n  \r\n  button:-moz-focusring, [type="button"]:-moz-focusring, [type="reset"]:-moz-focusring, [type="submit"]:-moz-focusring {\r\n    outline: 1px dotted ButtonText;\r\n  }\r\n  \r\n  /**\r\n   * Correct the padding in Firefox.\r\n   */\r\n  \r\n  fieldset {\r\n    padding: 0.35em 0.75em 0.625em;\r\n  }\r\n  \r\n  /**\r\n   * 1. Correct the text wrapping in Edge and IE.\r\n   * 2. Correct the color inheritance from `fieldset` elements in IE.\r\n   * 3. Remove the padding so developers are not caught out when they zero out\r\n   *    `fieldset` elements in all browsers.\r\n   */\r\n  \r\n  legend {\r\n    box-sizing: border-box;\r\n    /* 1 */\r\n    color: inherit;\r\n    /* 2 */\r\n    display: table;\r\n    /* 1 */\r\n    max-width: 100%;\r\n    /* 1 */\r\n    padding: 0;\r\n    /* 3 */\r\n    white-space: normal;\r\n    /* 1 */\r\n  }\r\n  \r\n  /**\r\n   * Add the correct vertical alignment in Chrome, Firefox, and Opera.\r\n   */\r\n  \r\n  progress {\r\n    vertical-align: baseline;\r\n  }\r\n  \r\n  /**\r\n   * Remove the default vertical scrollbar in IE 10+.\r\n   */\r\n  \r\n  textarea {\r\n    overflow: auto;\r\n  }\r\n  \r\n  /**\r\n   * 1. Add the correct box sizing in IE 10.\r\n   * 2. Remove the padding in IE 10.\r\n   */\r\n  \r\n  [type="checkbox"], [type="radio"] {\r\n    box-sizing: border-box;\r\n    /* 1 */\r\n    padding: 0;\r\n    /* 2 */\r\n  }\r\n  \r\n  /**\r\n   * Correct the cursor style of increment and decrement buttons in Chrome.\r\n   */\r\n  \r\n  [type="number"]::-webkit-inner-spin-button, [type="number"]::-webkit-outer-spin-button {\r\n    height: auto;\r\n  }\r\n  \r\n  /**\r\n   * 1. Correct the odd appearance in Chrome and Safari.\r\n   * 2. Correct the outline style in Safari.\r\n   */\r\n  \r\n  [type="search"] {\r\n    -webkit-appearance: textfield;\r\n    /* 1 */\r\n    outline-offset: -2px;\r\n    /* 2 */\r\n  }\r\n  \r\n  /**\r\n   * Remove the inner padding in Chrome and Safari on macOS.\r\n   */\r\n  \r\n  [type="search"]::-webkit-search-decoration {\r\n    -webkit-appearance: none;\r\n  }\r\n  \r\n  /**\r\n   * 1. Correct the inability to style clickable types in iOS and Safari.\r\n   * 2. Change font properties to `inherit` in Safari.\r\n   */\r\n  \r\n  ::-webkit-file-upload-button {\r\n    -webkit-appearance: button;\r\n    /* 1 */\r\n    font: inherit;\r\n    /* 2 */\r\n  }\r\n  \r\n  /* Interactive\r\n     ========================================================================== */\r\n  \r\n  /*\r\n   * Add the correct display in Edge, IE 10+, and Firefox.\r\n   */\r\n  \r\n  details {\r\n    display: block;\r\n  }\r\n  \r\n  /*\r\n   * Add the correct display in all browsers.\r\n   */\r\n  \r\n  summary {\r\n    display: list-item;\r\n  }\r\n  \r\n  /* Misc\r\n     ========================================================================== */\r\n  \r\n  /**\r\n   * Add the correct display in IE 10+.\r\n   */\r\n  \r\n  template {\r\n    display: none;\r\n  }\r\n  \r\n  /**\r\n   * Add the correct display in IE 10.\r\n   */\r\n  \r\n  [hidden] {\r\n    display: none;\r\n  }'],sourceRoot:""}]),r.Z=A},3645:function(n){n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(t)for(var s=0;s<this.length;s++){var a=this[s][0];null!=a&&(A[a]=!0)}for(var p=0;p<n.length;p++){var c=[].concat(n[p]);t&&A[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),e&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=e):c[2]=e),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),r.push(c))}},r}},1667:function(n){n.exports=function(n,r){return r||(r={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),r.hash&&(n+=r.hash),/["'() \t\n]|(%20)/.test(n)||r.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},7537:function(n){n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(o," */");return[r].concat([i]).join("\n")}return[r].join("\n")}},3379:function(n){var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var i={},A=[],s=0;s<n.length;s++){var a=n[s],p=t.base?a[0]+t.base:a[0],c=i[p]||0,d="".concat(p," ").concat(c);i[p]=c+1;var l=e(d),u={css:a[1],media:a[2],sourceMap:a[3],supports:a[4],layer:a[5]};if(-1!==l)r[l].references++,r[l].updater(u);else{var m=o(u,t);t.byIndex=s,r.splice(s,0,{identifier:d,updater:m,references:1})}A.push(d)}return A}function o(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,o){var i=t(n=n||[],o=o||{});return function(n){n=n||[];for(var A=0;A<i.length;A++){var s=e(i[A]);r[s].references--}for(var a=t(n,o),p=0;p<i.length;p++){var c=e(i[p]);0===r[c].references&&(r[c].updater(),r.splice(c,1))}i=a}}},569:function(n){var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},9216:function(n){n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},3565:function(n,r,e){n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},7795:function(n){n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},4589:function(n){n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}},2604:function(n,r,e){n.exports=e.p+"954d1ecf00812f229770.svg"},8067:function(n,r,e){n.exports=e.p+"2c95ef2d4194e2e009fb.svg"},5666:function(n,r,e){n.exports=e.p+"686ec1de24fcfb5046fa.svg"},1470:function(n,r,e){n.exports=e.p+"efd0869c1313bd084f89.svg"},1728:function(n,r,e){n.exports=e.p+"bdb4fcab64dcefd54641.svg"},3304:function(n,r,e){n.exports=e.p+"c6938660eec019fefd68.woff?v=3.19"},2132:function(n,r,e){n.exports=e.p+"9053572c46aeb4b16caa.woff?v=3.19"},2815:function(n,r,e){n.exports=e.p+"8c206db99195777c6769.woff?v=3.19"}},r={};function e(t){var o=r[t];if(void 0!==o)return o.exports;var i=r[t]={id:t,exports:{}};return n[t](i,i.exports,e),i.exports}e.m=n,e.n=function(n){var r=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(r,{a:r}),r},e.d=function(n,r){for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=function(n,r){return Object.prototype.hasOwnProperty.call(n,r)},function(){var n;e.g.importScripts&&(n=e.g.location+"");var r=e.g.document;if(!n&&r&&(r.currentScript&&(n=r.currentScript.src),!n)){var t=r.getElementsByTagName("script");if(t.length)for(var o=t.length-1;o>-1&&!n;)n=t[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n}(),e.b=document.baseURI||self.location.href,e.nc=void 0,function(){var n=e(3379),r=e.n(n),t=e(7795),o=e.n(t),i=e(569),A=e.n(i),s=e(3565),a=e.n(s),p=e(9216),c=e.n(p),d=e(4589),l=e.n(d),u=e(748),m={};m.styleTagTransform=l(),m.setAttributes=a(),m.insert=A().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=c(),r()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;class h{constructor(n){let{cardData:r,templateSelector:e,handleCardClick:t,popupWithImage:o}=n;this._photoLink=r.link,this._title=r.name,this._templateSelector=e,this._handleCardClick=t,this._popupWithImage=o}createCard(){return this._element=this._createCardElement(),this._photo=this._element.querySelector(".element__photo"),this._photoCaption=this._element.querySelector(".element__title"),this._deleteIcon=this._element.querySelector(".element__delete-icon"),this._heartIcon=this._element.querySelector(".element__heart"),this._populateCardElement(),this._setEventListeners(),this._element}_createCardElement(){return document.querySelector(this._templateSelector).content.querySelector(".element").cloneNode(!0)}_populateCardElement(){this._element.querySelector(".element__text").textContent=this._title,this._photo.src=this._photoLink,this._photo.alt=this._title}_setEventListeners(){this._deleteIcon.addEventListener("click",(()=>this._handleDeleteCard())),this._heartIcon.addEventListener("click",(()=>this._handlePhotoLike())),this._photo.addEventListener("click",(()=>this._handleCardClick(this._title,this._photoLink)))}_handleDeleteCard(){this._element.remove(),this._element=null}_handlePhotoLike(){this._heartIcon.classList.toggle("element__heart_like")}}class C{constructor(n){this._popup=document.querySelector(n),this._closeButton=this._popup.querySelector(".popup__close-button")}open(){this._popup.classList.add("popup_opened"),this._closeButton.addEventListener("click",this._handleCloseButton)}_handleCloseButton=n=>{n.preventDefault(),this.close()};close(){this._popup.classList.remove("popup_opened")}_handleEscClose=n=>{n.preventDefault(),"Escape"===n.key&&this.close()};setEventListners(){this._popup.addEventListener("click",(n=>{(n.target.classList.contains("popup__close-button")||n.target===this._popup)&&this.close()}))}}class f extends C{constructor(n,r){super(n),this._formElement=this._popup.querySelector(".form"),this._inputList=this._formElement.querySelectorAll(".form__input"),this._submitFunction=r}_getInputValue(){const n={};return this._inputList.forEach((r=>{""!==r.value&&(n[r.name]=r.value)})),n}setEventListeners(){super.setEventListners(),this._popup.addEventListener("submit",(()=>{const n=this._getInputValue();0!==Object.keys(n).length&&(this._submitFunction(n),this.close())}))}close(){super.close(),this._formElement.reset()}}class g{constructor(n,r){this._formElement=r,this._formSelector=n.formSelector,this._inputSelector=n.inputSelector,this._submitButtonSelector=n.submitButtonSelector,this._inactiveButtonClass=n.inactiveButtonClass,this._inputErrorClass=n.inputErrorClass,this._errorClass=n.errorClass}_checkInputValidity(n){n.validity.valid?this._hideInputError(n):this._showInputError(n)}_hasInvalidInput(){return this._inputList.some((n=>!n.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled","")):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.removeAttribute("disabled"))}_showInputError(n){const r=this._formElement.querySelector(`.${n.id}-error`);n.classList.add(this._inputErrorClass),r.textContent=n.validationMessage,r.classList.add(this._errorClass)}_hideInputError(n){const r=this._formElement.querySelector(`.${n.id}-error`);n.classList.remove(this._inputErrorClass),r.classList.remove(this._errorClass),r.textContent=""}_setEventListeners(){this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._toggleButtonState(),this._inputList.forEach((n=>{n.addEventListener("input",(()=>{this._checkInputValidity(n),this._toggleButtonState()}))}))}resetValidation(){this._toggleButtonState(),this._inputList.forEach((n=>{this._hideInputError(n)}))}enableValidation(){this._formElement.addEventListener("submit",(n=>{n.preventDefault()})),this._setEventListeners()}}const b=document.querySelector("#profile-edit-popup"),I=document.querySelector(".profile__name"),B=document.querySelector(".profile__subheading"),x=b.querySelector("#username-input"),_=b.querySelector("#about-me-input");function E(n){I.textContent=x.value,B.textContent=_.value}const v=new class extends C{constructor(n){super(n),this._photo=this._popup.querySelector(".popup__image"),this._caption=this._popup.querySelector(".popup__caption")}open(n,r){this._photo.src=r,this._photo.alt=n.replace(/\s+/g,"-").toLowerCase(),this._caption.textContent=n,super.open()}}("#photo-popup"),w=new class{constructor(n,r){let{items:e,itemRenderer:t}=n;this._items=e,this._itemRenderer=t,this._containerSelector=r,this._container=document.querySelector(r),this._renderer()}_renderer(){this._container.innerHtml="",this._items.forEach((n=>{const r=this._itemRenderer(n);console.log(this._container.appendchild),this._container.append(r)}))}addItem(n){".elements"===this._containerSelector?this._container.prepend(n):this._container.append(n)}}({items:[{name:"Lembah Yosemite",link:"../images/yosemite-valley.png"},{name:"Danau Louise",link:"/images/lake-louise.png"},{name:"Pegunungan Gundul",link:"../images/bald-mountains.png"},{name:"Gunung Latemar",link:"../images/latemar.png"},{name:"Taman Nasional Vanoise",link:"./images/vanoise-national-park.png"},{name:"Lago di Braies",link:"/images/lago-di-braies.png"}],itemRenderer:n=>new h({cardData:n,templateSelector:"#card",handleCardClick:(n,r)=>{v.open(n,r)}}).createCard()},".elements"),y=document.querySelector(".profile__edit-button"),k=document.querySelector("#profile_edit_form");y.addEventListener("click",(function(){k.reset(),R.profile_edit_form.resetValidation(),x.value=I.textContent,_.value=B.textContent;const n=new f("#profile-edit-popup",E);n.open(),n.setEventListeners()}));const z=document.querySelector(".profile__add-button"),S=document.querySelector("#add-card-popup").querySelector("#add-photo-form");function Z(n){const r=new h({cardData:{name:n.title,link:n.link},templateSelector:"#card",handleCardClick:(n,r)=>{v.open(n,r)}});w.addItem(r.createCard())}z.addEventListener("click",(function(){S.reset(),R["add-photo-form"].resetValidation();const n=new f("#add-card-popup",Z);n.open(),n.setEventListeners()}));const R={};var F;F={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit",inactiveButtonClass:"form__submit_inactive",inputErrorClass:"form__input_type_error",errorClass:"form__input-error_active"},Array.from(document.querySelectorAll(F.formSelector)).forEach((n=>{const r=new g(F,n),e=n.getAttribute("name");R[e]=r,r.enableValidation()}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,